{
  "name": "chatgpt-vscode-nodejs-backend",
  "icon": "images/icon.png",
  "license": "MIT",
  "repository": {
    "url": "https://github.com/circlenaut/chatgpt-vscode-nodejs-backend"
  },
  "publisher": "Phillip Strefling",
  "displayName": "ChatGPT VSCode Nodejs Backend",
  "description": "A ChatGPT integration build using ChatGPT with a Nodejs backend for handling authentication",
  "version": "0.0.1-rc1",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Snippets",
    "Data Science",
    "Machine Learning",
    "Education",
    "Testing",
    "Other"
  ],
  "activationEvents": [
    "onView:chatgpt-vscode-nodejs-backend.view",
    "onCommand:chatgpt-vscode-nodejs-backend.askGPT",
    "onCommand:chatgpt-vscode-nodejs-backend.whyBroken",
    "onCommand:chatgpt-vscode-nodejs-backend.explainPls",
    "onCommand:chatgpt-vscode-nodejs-backend.refactor",
    "onCommand:chatgpt-vscode-nodejs-backend.addTests",
    "onCommand:chatgpt-vscode-nodejs-backend.resetToken",
    "onCommand:chatgpt-vscode-nodejs-backend.startAPIServer",
    "onCommand:chatgpt-vscode-nodejs-backend.getAPIHealth",
    "onCommand:chatgpt-vscode-nodejs-backend.setupAPIServer",
    "onCommand:chatgpt-vscode-nodejs-backend.loginAPIServer",
    "onCommand:chatgpt-vscode-nodejs-backend.setLoginAPIServer",
    "onCommand:chatgpt-vscode-nodejs-backend.logoutAPIServer",
    "onCommand:chatgpt-vscode-nodejs-backend.getAPIServerCredentials",
    "onCommand:chatgpt-vscode-nodejs-backend.setAPIServerCredentials",
    "onCommand:chatgpt-vscode-nodejs-backend.resetAPIServerSession",
    "onCommand:chatgpt-vscode-nodejs-backend.refreshAPIServerSession",
    "onCommand:chatgpt-vscode-nodejs-backend.checkAPIServerAuthentication",
    "onCommand:chatgpt-vscode-nodejs-backend.stopAPIServer"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "menus": {
      "editor/context": [
        {
          "command": "chatgpt-vscode-nodejs-backend.whyBroken",
          "group": "chat-gpt-menu-group@1"
        },
        {
          "command": "chatgpt-vscode-nodejs-backend.explainPls",
          "group": "chat-gpt-menu-group@2"
        },
        {
          "command": "chatgpt-vscode-nodejs-backend.refactor",
          "group": "chat-gpt-menu-group@3"
        },
        {
          "command": "chatgpt-vscode-nodejs-backend.addTests",
          "group": "chat-gpt-menu-group@4"
        }
      ]
    },
    "commands": [
      {
        "command": "chatgpt-vscode-nodejs-backend.askGPT",
        "title": "ChatGPT: Query"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.addTests",
        "title": "ChatGPT: Add tests"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.whyBroken",
        "title": "ChatGPT: Why is it broken?"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.explainPls",
        "title": "ChatGPT: Explain code"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.refactor",
        "title": "ChatGPT: Refactor"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.resetToken",
        "title": "ChatGPT: Reset token"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.startAPIServer",
        "title": "ChatGPT: Start the local API server"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.getAPIHealth",
        "title": "ChatGPT: Get backend API health"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.setupAPIServer",
        "title": "ChatGPT: Setup the backend API server"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.loginAPIServer",
        "title": "ChatGPT: Login to the backend API server"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.setLoginAPIServer",
        "title": "ChatGPT: Set Login to the backend API server"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.logoutAPIServer",
        "title": "ChatGPT: Logout from the backend API server"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.getAPIServerCredentials",
        "title": "ChatGPT: Get current API server credentials"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.setAPIServerCredentials",
        "title": "ChatGPT: Set current API server credentials"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.resetAPIServerSession",
        "title": "ChatGPT: Reset Session Token on the API server"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.refreshAPIServerSession",
        "title": "ChatGPT: Refresh Session Token on the API server"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.checkAPIServerAuthentication",
        "title": "ChatGPT: Check if the API server is authenticated"
      },
      {
        "command": "chatgpt-vscode-nodejs-backend.stopAPIServer",
        "title": "ChatGPT: Stop the local API server"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "chatgpt-vscode-nodejs-backend",
          "title": "ChatGPT",
          "icon": "images/icon.png"
        }
      ]
    },
    "views": {
      "chatgpt-vscode-nodejs-backend": [
        {
          "type": "webview",
          "id": "chatgpt-vscode-nodejs-backend.view",
          "name": "ChatGPT"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "vscode:package": "vsce package",
    "vscode:install": "code --install-extension chatgpt-vscode-nodejs-backend-0.0.1-rc1.vsix",
    "vscode:clean": "del chatgpt-vscode-nodejs-backend-0.0.1-rc1.vsix",
    "setup": "npm install",
    "compile": "webpack",
    "build": "tsc -p tsconfig.json",
    "postbuild": "npm run copy-files",
    "copy-files": "shx cp -R ../api out",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/detect-port": "^1.3.2",
    "@types/glob": "^8.0.0",
    "@types/kill-port": "^2.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "18.x",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "@vscode/vsce": "^2.15.0",
    "del-cli": "^5.0.0",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "ts-loader": "^9.4.2",
    "typescript": "^4.9.3",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.0",
    "webpack-node-externals": "^3.0.0",
    "copyfiles": "^2.4.1",
    "shx": "^0.3.4"
  },
  "dependencies": {
    "chatgpt": "^3.3.1",
    "detect-port": "^1.5.1",
    "kill-port": "^2.0.1",
    "undici": "^5.14.0"
  }
}
